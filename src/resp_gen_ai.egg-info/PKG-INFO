Metadata-Version: 2.4
Name: resp_gen_ai
Version: 0.0.1.dev0
Summary: A comprehensive benchmark for responsible generative AI.
Author-email: shuo chen <chenshuo.cs@outlook.com>, jindong gu <jindong.gu@outlook.com>
Maintainer-email: shuo chen <chenshuo.cs@outlook.com>, jindong gu <jindong.gu@outlook.com>
License: MIT License
        
        Copyright (c) 2024 shuo chen; jindong gu
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Bug Tracker, https://github.com/chenxshuo/resp_gen_ai/issues
Project-URL: Homepage, https://github.com/chenxshuo/resp_gen_ai
Project-URL: Repository, https://github.com/chenxshuo/resp_gen_ai.git
Project-URL: Documentation, https://resp_gen_ai.readthedocs.io
Keywords: snekpack,cookiecutter
Classifier: Development Status :: 1 - Planning
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Framework :: Pytest
Classifier: Framework :: tox
Classifier: Framework :: Sphinx
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: more_itertools
Requires-Dist: tqdm
Requires-Dist: furo
Requires-Dist: click
Requires-Dist: more_click
Requires-Dist: click
Requires-Dist: more_click
Requires-Dist: torch==2.6.0
Requires-Dist: torchvision==0.21.0
Requires-Dist: huggingface-hub==0.30.1
Requires-Dist: ipdb
Requires-Dist: openai
Requires-Dist: datasets
Requires-Dist: transformers==4.51.0
Requires-Dist: Pillow
Requires-Dist: vertexai
Requires-Dist: google-api-python-client
Requires-Dist: imageio
Requires-Dist: seaborn
Requires-Dist: matplotlib
Requires-Dist: scipy
Requires-Dist: protobuf
Requires-Dist: sentencepiece
Requires-Dist: tiktoken
Requires-Dist: transformers_stream_generator
Requires-Dist: einops
Requires-Dist: nltk
Requires-Dist: rouge-score
Requires-Dist: accelerate==1.6.0
Requires-Dist: vllm==0.8.3
Requires-Dist: qwen_vl_utils
Requires-Dist: peft
Requires-Dist: ruff
Provides-Extra: tests
Requires-Dist: pytest; extra == "tests"
Requires-Dist: coverage; extra == "tests"
Provides-Extra: docs
Requires-Dist: sphinx; extra == "docs"
Requires-Dist: sphinx-rtd-theme; extra == "docs"
Requires-Dist: sphinx-click; extra == "docs"
Requires-Dist: sphinx_automodapi; extra == "docs"
Dynamic: license-file

Structure Tree

``` text
.
├── CITATION.cff
├── LICENSE
├── MANIFEST.in
├── README.md
├── assembling.py
├── docs
│   └── source
├── outputs
│   └── 2025-03-16
├── pyproject.toml
├── setup.cfg
├── src
│   ├── resp_gen_ai
│   └── resp_gen_ai.egg-info
├── tests
│   ├── __init__.py
│   └── test_version.py
├── tox.ini
└── use_cases
    ├── calculate_asr_lm.py
    ├── calculate_asr_lm_for_single.py
    ├── calculate_only_asr_from_json.py
    ├── evaluation_results
    ├── evalutor_llama_guard_3_8B.py
    ├── evalutor_strong_reject.py
    ├── evalutor_strong_reject_one_by_one.py
    ├── evalutor_strong_reject_one_by_one_copy.py
    ├── hallucination
    ├── jailbreak
    ├── load_inference
    ├── memorization
    └── reasoning 
```
These files specify the parameters for loading the model and the parameters used during generation. However, these parameters are not applicable to vLLM.

``` bash
RespGenAI-zhongyi/src/resp_gen_ai/models
```
This is where the models above are called. In addition, the code in these places loads databases and slices them into batch and passes them into the model, then saves the results as a json file.
``` bash
RespGenAI-zhongyi/use_cases/jailbreak/truly_usefull_codes
```
The place to store the results is here. Please ignore files outside of folders, the official results are in folders. The folders are named after the jailbreak attack method. The new_dsv is an exception, it's another version of Align-ds-v that I ran.
``` bash
RespGenAI-zhongyi/use_cases/evaluation_results
```
The code that loads the judge model is the following two scripts, which read the output of the model and load it into the judge model one by one, and then save the evaluaiton to the result in the folder above.
``` bash
RespGenAI-zhongyi/use_cases/evalutor_llama_guard_3_8B.py
RespGenAI-zhongyi/use_cases/evalutor_strong_reject_one_by_one.py
```
As for the datasets. They are all in here, please ignore the codes outside the folders, the formal dataset used in this work are all in the folder named by the jailbreak methods, and they are all csv files.
``` bash
RespGenAI-zhongyi/use_cases/jailbreak
```
With the large number of images used in VRP and FigStep, I didn't find an elegant way to upload them because they were too big, 21 GB， so I decided to give up on uploading them.
Environment configuration information can be found in pyproject.toml.
